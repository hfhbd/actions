var __webpack_modules__={233:()=>{eval("\n;// CONCATENATED MODULE: ./kotlin/kotlin-kotlin-stdlib.mjs\n//region block: pre-declaration\ninitMetadataForObject(Unit, 'Unit');\ninitMetadataForClass(BaseOutput, 'BaseOutput');\ninitMetadataForClass(NodeJsOutput, 'NodeJsOutput', VOID, BaseOutput);\ninitMetadataForClass(BufferedOutput, 'BufferedOutput', BufferedOutput, BaseOutput);\ninitMetadataForClass(BufferedOutputToConsoleLog, 'BufferedOutputToConsoleLog', BufferedOutputToConsoleLog, BufferedOutput);\n//endregion\nfunction Unit() {\n}\nprotoOf(Unit).toString = function () {\n  return 'kotlin.Unit';\n};\nvar Unit_instance;\nfunction Unit_getInstance() {\n  return Unit_instance;\n}\nfunction implement(interfaces) {\n  var maxSize = 1;\n  var masks = [];\n  var inductionVariable = 0;\n  var last = interfaces.length;\n  while (inductionVariable < last) {\n    var i = interfaces[inductionVariable];\n    inductionVariable = inductionVariable + 1 | 0;\n    var currentSize = maxSize;\n    var tmp1_elvis_lhs = i.prototype.$imask$;\n    var imask = tmp1_elvis_lhs == null ? i.$imask$ : tmp1_elvis_lhs;\n    if (!(imask == null)) {\n      masks.push(imask);\n      currentSize = imask.length;\n    }\n    var iid = i.$metadata$.iid;\n    var tmp;\n    if (iid == null) {\n      tmp = null;\n    } else {\n      // Inline function 'kotlin.let' call\n      // Inline function 'kotlin.contracts.contract' call\n      // Inline function 'kotlin.js.implement.<anonymous>' call\n      tmp = bitMaskWith(iid);\n    }\n    var iidImask = tmp;\n    if (!(iidImask == null)) {\n      masks.push(iidImask);\n      currentSize = Math.max(currentSize, iidImask.length);\n    }\n    if (currentSize > maxSize) {\n      maxSize = currentSize;\n    }\n  }\n  return compositeBitMask(maxSize, masks);\n}\nfunction bitMaskWith(activeBit) {\n  var numberIndex = activeBit >> 5;\n  var intArray = new Int32Array(numberIndex + 1 | 0);\n  var positionInNumber = activeBit & 31;\n  var numberWithSettledBit = 1 << positionInNumber;\n  intArray[numberIndex] = intArray[numberIndex] | numberWithSettledBit;\n  return intArray;\n}\nfunction compositeBitMask(capacity, masks) {\n  var tmp = 0;\n  var tmp_0 = new Int32Array(capacity);\n  while (tmp < capacity) {\n    var tmp_1 = tmp;\n    var result = 0;\n    var inductionVariable = 0;\n    var last = masks.length;\n    while (inductionVariable < last) {\n      var mask = masks[inductionVariable];\n      inductionVariable = inductionVariable + 1 | 0;\n      if (tmp_1 < mask.length) {\n        result = result | mask[tmp_1];\n      }\n    }\n    tmp_0[tmp_1] = result;\n    tmp = tmp + 1 | 0;\n  }\n  return tmp_0;\n}\nfunction objectCreate(proto) {\n  proto = proto === VOID ? null : proto;\n  return Object.create(proto);\n}\nfunction defineProp(obj, name, getter, setter) {\n  return Object.defineProperty(obj, name, {configurable: true, get: getter, set: setter});\n}\nfunction equals(obj1, obj2) {\n  if (obj1 == null) {\n    return obj2 == null;\n  }\n  if (obj2 == null) {\n    return false;\n  }\n  if (typeof obj1 === 'object' && typeof obj1.equals === 'function') {\n    return obj1.equals(obj2);\n  }\n  if (obj1 !== obj1) {\n    return obj2 !== obj2;\n  }\n  if (typeof obj1 === 'number' && typeof obj2 === 'number') {\n    var tmp;\n    if (obj1 === obj2) {\n      var tmp_0;\n      if (obj1 !== 0) {\n        tmp_0 = true;\n      } else {\n        // Inline function 'kotlin.js.asDynamic' call\n        var tmp_1 = 1 / obj1;\n        // Inline function 'kotlin.js.asDynamic' call\n        tmp_0 = tmp_1 === 1 / obj2;\n      }\n      tmp = tmp_0;\n    } else {\n      tmp = false;\n    }\n    return tmp;\n  }\n  return obj1 === obj2;\n}\nfunction protoOf(constructor) {\n  return constructor.prototype;\n}\nfunction createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity) {\n  var undef = VOID;\n  var iid = kind === 'interface' ? generateInterfaceId() : VOID;\n  return {kind: kind, simpleName: name, associatedObjectKey: associatedObjectKey, associatedObjects: associatedObjects, suspendArity: suspendArity, $kClass$: undef, defaultConstructor: defaultConstructor, iid: iid};\n}\nfunction generateInterfaceId() {\n  if (globalInterfaceId === VOID) {\n    globalInterfaceId = 0;\n  }\n  // Inline function 'kotlin.js.unsafeCast' call\n  globalInterfaceId = globalInterfaceId + 1 | 0;\n  // Inline function 'kotlin.js.unsafeCast' call\n  return globalInterfaceId;\n}\nvar globalInterfaceId;\nfunction initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {\n  if (!(parent == null)) {\n    ctor.prototype = Object.create(parent.prototype);\n    ctor.prototype.constructor = ctor;\n  }\n  var metadata = createMetadata(kind, name, defaultConstructor, associatedObjectKey, associatedObjects, suspendArity);\n  ctor.$metadata$ = metadata;\n  if (!(interfaces == null)) {\n    var receiver = !equals(metadata.iid, VOID) ? ctor : ctor.prototype;\n    receiver.$imask$ = implement(interfaces);\n  }\n}\nfunction initMetadataForClass(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {\n  var kind = 'class';\n  initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);\n}\nfunction initMetadataForObject(ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects) {\n  var kind = 'object';\n  initMetadataFor(kind, ctor, name, defaultConstructor, parent, interfaces, suspendArity, associatedObjectKey, associatedObjects);\n}\nfunction initMetadataForLambda(ctor, parent, interfaces, suspendArity) {\n  initMetadataForClass(ctor, 'Lambda', VOID, parent, interfaces, suspendArity, VOID, VOID);\n}\nfunction initMetadataForCoroutine(ctor, parent, interfaces, suspendArity) {\n  initMetadataForClass(ctor, 'Coroutine', VOID, parent, interfaces, suspendArity, VOID, VOID);\n}\nfunction initMetadataForFunctionReference(ctor, parent, interfaces, suspendArity) {\n  initMetadataForClass(ctor, 'FunctionReference', VOID, parent, interfaces, suspendArity, VOID, VOID);\n}\nfunction initMetadataForCompanion(ctor, parent, interfaces, suspendArity) {\n  initMetadataForObject(ctor, 'Companion', VOID, parent, interfaces, suspendArity, VOID, VOID);\n}\nfunction get_VOID() {\n  _init_properties_void_kt__3zg9as();\n  return VOID;\n}\nvar VOID;\nvar properties_initialized_void_kt_e4ret2;\nfunction _init_properties_void_kt__3zg9as() {\n  if (!properties_initialized_void_kt_e4ret2) {\n    properties_initialized_void_kt_e4ret2 = true;\n    VOID = void 0;\n  }\n}\nfunction get_output() {\n  _init_properties_console_kt__rfg7jv();\n  return output;\n}\nvar output;\nfunction BaseOutput() {\n}\nprotoOf(BaseOutput).a = function () {\n  this.b('\\n');\n};\nprotoOf(BaseOutput).c = function (message) {\n  this.b(message);\n  this.a();\n};\nfunction NodeJsOutput(outputStream) {\n  BaseOutput.call(this);\n  this.d_1 = outputStream;\n}\nprotoOf(NodeJsOutput).b = function (message) {\n  // Inline function 'kotlin.io.String' call\n  var messageString = String(message);\n  this.d_1.write(messageString);\n};\nfunction BufferedOutputToConsoleLog() {\n  BufferedOutput.call(this);\n}\nprotoOf(BufferedOutputToConsoleLog).b = function (message) {\n  // Inline function 'kotlin.io.String' call\n  var s = String(message);\n  // Inline function 'kotlin.text.nativeLastIndexOf' call\n  // Inline function 'kotlin.js.asDynamic' call\n  var i = s.lastIndexOf('\\n', 0);\n  if (i >= 0) {\n    var tmp = this;\n    var tmp_0 = this.f_1;\n    // Inline function 'kotlin.text.substring' call\n    // Inline function 'kotlin.js.asDynamic' call\n    tmp.f_1 = tmp_0 + s.substring(0, i);\n    this.g();\n    // Inline function 'kotlin.text.substring' call\n    var this_0 = s;\n    var startIndex = i + 1 | 0;\n    // Inline function 'kotlin.js.asDynamic' call\n    s = this_0.substring(startIndex);\n  }\n  this.f_1 = this.f_1 + s;\n};\nprotoOf(BufferedOutputToConsoleLog).g = function () {\n  console.log(this.f_1);\n  this.f_1 = '';\n};\nfunction BufferedOutput() {\n  BaseOutput.call(this);\n  this.f_1 = '';\n}\nprotoOf(BufferedOutput).b = function (message) {\n  var tmp = this;\n  var tmp_0 = this.f_1;\n  // Inline function 'kotlin.io.String' call\n  tmp.f_1 = tmp_0 + String(message);\n};\nfunction println(message) {\n  _init_properties_console_kt__rfg7jv();\n  get_output().c(message);\n}\nvar properties_initialized_console_kt_gll9dl;\nfunction _init_properties_console_kt__rfg7jv() {\n  if (!properties_initialized_console_kt_gll9dl) {\n    properties_initialized_console_kt_gll9dl = true;\n    // Inline function 'kotlin.run' call\n    // Inline function 'kotlin.contracts.contract' call\n    // Inline function 'kotlin.io.output.<anonymous>' call\n    var isNode = typeof process !== 'undefined' && process.versions && !!process.versions.node;\n    output = isNode ? new NodeJsOutput(process.stdout) : new BufferedOutputToConsoleLog();\n  }\n}\n//region block: init\nUnit_instance = new Unit();\n//endregion\n//region block: exports\n\n//endregion\n\n\n;// CONCATENATED MODULE: ./kotlin/actions-setup-version-post.mjs\n\n//region block: imports\n//endregion\n//region block: pre-declaration\n//endregion\nfunction main() {\n  println('Hello Post');\n}\nfunction mainWrapper() {\n  main();\n}\nmainWrapper();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///233\n")}},__webpack_exports__={};__webpack_modules__[233]();